# hr-manage:applicaion.yml
# 测试配置
user:
  id: 来自配置中心：本地配置

# 端口配置
server:
  port: 8010

info:
  app:
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
spring:
  application:
    name: "@project.name@"
  profiles:
    active: dev
    # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://81.70.14.217:3306/hr?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    # 下面为连接池的补充设置，应用到上面数据源中
    initialSize: 5  # 初始化大小
    minIdle: 5  #最小
    maxActive: 50  #最大
    maxWait: 60000 # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000  # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true  # 打开PSCache，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,log4j  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  redis:
    host: 81.70.14.217
    port: 6379
    password: '[370804sjr]'



